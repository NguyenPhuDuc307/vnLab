@using Microsoft.AspNetCore.Identity
@using vnLab.Data.Entities

@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager
@inject RoleManager<IdentityRole> RoleManager

@model vnLab.Data.Entities.Post

@{
    ViewData["Title"] = Model.Title;
    ViewData["Heading"] = Model.Title;
}
<div>
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Title)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Title)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Content)
        </dt>
        <dd class="col-sm-10">
            @Html.Raw(Model.Content)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.User.UserName)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.User.Email)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Asked)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Asked)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Modified)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Modified)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Viewed)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Viewed)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Tags)
        </dt>
        <dd class="col-sm-10">
            <p class="card-text">
                @if (Model.Tags != null)
                {
                    foreach (var tag in Model.Tags.Split(','))
                    {
                        <small class="badge badge-primary">@tag</small>
                    }
                }
            </p>
        </dd>
    </dl>
    <form method="post" asp-action="Rating" asp-route-id="@Model">
        <label for="point">Điểm đánh giá:</label>
        <div class="d-flex">
            <select id="point" name="point" class="form-control col-md-2 me-1">
                <option value="1">1 sao</option>
                <option value="2">2 sao</option>
                <option value="3">3 sao</option>
                <option value="4">4 sao</option>
                <option value="5">5 sao</option>
            </select>
            <input type="hidden" asp-for="Id" />
            <button type="submit" class="btn btn-primary">Gửi đánh giá</button>
        </div>
    </form>
</div>
<div>
    @if (SignInManager.IsSignedIn(User))
    {
        var user = await UserManager.GetUserAsync(User);
        var roles = await UserManager.GetRolesAsync(user!);
        var isAdmin = roles.Contains("Admin");

        @if (isAdmin || (Model.User != null && UserManager.GetUserName(User) == Model.User.UserName))
        {
            <a asp-action="Edit" asp-route-id="@Model?.Id">Chỉnh sửa |</a>
            <a asp-action="Delete" class="text-danger" asp-route-id="@Model?.Id">Xóa bài viết |</a>
        }
    }

    <a asp-action="Index">Trở lại danh sách</a>
</div>
